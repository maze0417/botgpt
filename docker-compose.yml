version: '3.7'
services:
  ngrok:
    restart: unless-stopped
    image: ngrok/ngrok
    environment:
      TZ: Asia/Taipei
      NGROK_CONFIG: /etc/ngrok.yml
    command: start aibot
    volumes:
      - ./docker/ngrok/ngrok.yml:/etc/ngrok.yml
    ports:
      - "4040:4040"
    networks:
      - internal
  botgpt:
    image: botgpt:${APP_ENV:-local}
    build:
      context: .
      dockerfile: botgpt/Dockerfile
    restart: on-failure
    ports:
      - "${AIBOT_PORT:-8087}:8087"
    volumes:
      - ./botgpt/log:/app/log
      - ./docker/botgpt:/app/config
    environment:
      TARGET: ${APP_ENV:-local}
      SERVICE: ${SERVICE:-aibot}
      APP_VERSION: ${APP_VERSION:-1.0.0}
      TZ: ${TZ:-Asia/Taipei}
      ServerID: ${ServerID:-1}
    working_dir: /app
    networks:
      - internal
  redis:
    image: redis:latest
    restart: always
    networks:
      - internal
    ports:
      - "${REDIS_PORT:-6379}:6379"

  mysql:
    image: "mariadb:10.6.7"
    restart: unless-stopped
    ports:
      - "${SERVER_DB_PORT:-3306}:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - TZ=Asia/Taipei
    networks:
      - internal
networks:
  internal:
    name: ${NETWORKS:-internal}
    driver: bridge